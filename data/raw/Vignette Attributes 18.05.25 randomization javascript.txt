Qualtrics.SurveyEngine.addOnload(function()
{
	/*Place your JavaScript here to run when the page loads*/

	
	// Code to randomly generate conjoint profiles in a Qualtrics survey

// Terminology clarification: 
// Task = Set of choices presented to respondent in a single screen (i.e. pair of candidates)
// Profile = Single list of attributes in a given task (i.e. candidate)
// Attribute = Category characterized by a set of levels (i.e. education level)
// Level = Value that an attribute can take in a particular choice task (i.e. "no formal education")

// Attributes and Levels stored in a 2-dimensional Array 

/* Randomize array in-place using Durstenfeld shuffle algorithm */
function shuffleArray(array) {
    for (var i = array.length - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1));
        var temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
    return(array);
}
	
	// Function to generate weighted random numbers
function weighted_randomize(prob_array, at_key)
{
	var prob_list = prob_array[at_key];
	
	// Create an array containing cutpoints for randomization
	var cumul_prob = new Array(prob_list.length);
	var cumulative = 0.0;
	for (var i=0;  i < prob_list.length; i++){
		cumul_prob[i] = cumulative;
		cumulative = cumulative + parseFloat(prob_list[i]);
	}

	// Generate a uniform random floating point value between 0.0 and 1.0
	var unif_rand = Math.random();

	// Figure out which integer should be returned
	var outInt = 0;
	for (var k = 0; k < cumul_prob.length; k++){
		if (cumul_prob[k] <= unif_rand){
			outInt = k + 1;
		}
	}

	return(outInt);

}
	
	// MODIFIED Conjoint JS to ensure each attribute has DIFFERENT level in Job A and Job B

// Shuffle function
function shuffleArray(array) {
    for (var i = array.length - 1; i > 0; i--) {
        var j = Math.floor(Math.random() * (i + 1));
        var temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
    return(array);
}

// Attribute levels
var featurearray = {
    "Childcare & Family Support": ["Childcare available; equal partner support", "Limited childcare; partial partner support", "Very difficult childcare access; no support"],
    "Working Hours": ["20-30 h/week", "30-35 h/week", "40+ h/week"],
    "Workplace Flexibility": ["Flexible hours; remote work allowed", "Fixed hours; limited remote days", "Fixed hours; on-site work"],
    "Career Growth Opportunities": ["Clear promotion path", "Limited promotion path", "No promotion path"],
    "Workplace Gender Equality Culture": ["Gender-equal leadership", "Few women in leadership roles", "Male-dominated leadership"],
    
    "Financial Benefits": ["High salary, bonuses & benefits", "Average salary & basic benefits", "Below average salary without bonuses"],
    "Personal Value Alignment": ["Strong match with skills & long term goals", "Partial match with skills, not long term goals", "Poor match with skills & long term goals"]
};

var K = 6; // tasks
var returnarray = {};
var featureArrayKeys = Object.keys(featurearray);

for (var p = 1; p <= K; p++) {
    var attrCount = 0;

    for (var q = 0; q < featureArrayKeys.length; q++) {
        var attrName = featureArrayKeys[q];
        var levels = featurearray[attrName];
        attrCount++;

        // Randomize level for Profile A
        var levelA = levels[Math.floor(Math.random() * levels.length)];

        // Filter out levelA to ensure levelB is different
        var levelBChoices = levels.filter(lvl => lvl !== levelA);
        var levelB = levelBChoices[Math.floor(Math.random() * levelBChoices.length)];

        // Set attribute name
        var attrKey = "F-" + p + "-" + attrCount;
        returnarray[attrKey] = attrName;

        // Set levels for Profile A
        var levelKeyA = "F-" + p + "-1-" + attrCount;
        returnarray[levelKeyA] = levelA;

        // Set levels for Profile B
        var levelKeyB = "F-" + p + "-2-" + attrCount;
        returnarray[levelKeyB] = levelB;
    }
}

// Export to Qualtrics
var returnarrayKeys = Object.keys(returnarray);
for (var pr = 0; pr < returnarrayKeys.length; pr++) {
    Qualtrics.SurveyEngine.setEmbeddedData(returnarrayKeys[pr], returnarray[returnarrayKeys[pr]]);
}

	
});


	


Qualtrics.SurveyEngine.addOnReady(function()
{
	/*Place your JavaScript here to run when the page is fully displayed*/

});

Qualtrics.SurveyEngine.addOnUnload(function()
{
	/*Place your JavaScript here to run when the page is unloaded*/

});